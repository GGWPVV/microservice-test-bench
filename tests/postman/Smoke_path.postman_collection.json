{
	"info": {
		"_postman_id": "4dc7eed8-f66b-4782-8b6f-acfb5ffc05e6",
		"name": "Smoke_path",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44722778",
		"_collection_link": "https://georgii-3715821.postman.co/workspace/Test~a296380b-e246-4e7a-a613-d9030fcc3ef1/collection/44722778-4dc7eed8-f66b-4782-8b6f-acfb5ffc05e6?action=share&source=collection_link&creator=44722778"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomId = Math.floor(Math.random() * 10000);\r",
							"const randomUsername = `user_${randomId}`;\r",
							"const password = \"123456\";\r",
							"const email = `user_${randomId}@example.com`;\r",
							"const age = Math.floor(Math.random() * 60) + 18;\r",
							"const city = \"Lisbon\";  // Или рандомизируй из массива\r",
							"\r",
							"const payload = {\r",
							"    username: randomUsername,\r",
							"    password: password,\r",
							"    email: email,\r",
							"    age: age,\r",
							"    city: city\r",
							"};\r",
							"\r",
							"// Сохраняем переменные в коллекцию — можно использовать в следующих запросах (login, roll)\r",
							"pm.collectionVariables.set(\"email\", email);\r",
							"pm.collectionVariables.set(\"password\", password);\r",
							"\r",
							"// Обновляем тело запроса прямо перед отправкой\r",
							"pm.request.body.update(JSON.stringify(payload)); \r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"// Остальные проверки\r",
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has required fields\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.be.an('object');\r",
							"    pm.expect(responseData).to.have.all.keys('message', 'user_name');\r",
							"});\r",
							"\r",
							"pm.test(\"User_name must be a non-empty string\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData.user_name).to.be.a('string').and.not.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);  // 200мс слишком мало\r",
							"});\r",
							"\r",
							"pm.test(\"Response content type is application/json\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/users",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const data = pm.response.json();\r",
							"pm.collectionVariables.set(\"access_token\", data.access_token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8000/login",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "roll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8003/roll",
					"host": [
						"localhost"
					],
					"port": "8003",
					"path": [
						"roll"
					]
				}
			},
			"response": []
		},
		{
			"name": "Leaderboard",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "localhost:8003/leaderboard",
					"host": [
						"localhost"
					],
					"port": "8003",
					"path": [
						"leaderboard"
					]
				}
			},
			"response": []
		},
		{
			"name": "discount",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8002/discount",
					"host": [
						"localhost"
					],
					"port": "8002",
					"path": [
						"discount"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "access_token",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		}
	]
}