version: "3.8"
services:
  user_service:
    build:
      context: ./projects/user_service
    volumes:
      - ./projects/user_service/alembic/versions:/app/alembic/versions
    ports:
      - "8000:8000"
    container_name: user_service
    environment:
      - DB_URL=postgresql://userpostgres:userpassword@userdb:5432/userdb
    depends_on:
      - userdb
    networks:
      - app-network

  discount_service:
    build:
      context: ./projects/discount_service
    ports:
      - "8002:8000"
    container_name: discount_service
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - app-network

  userdb:
    image: postgres:16
    container_name: userdb
    environment:
      POSTGRES_USER: userpostgres
      POSTGRES_PASSWORD: userpassword
      POSTGRES_DB: userdb
    ports:
      - "5432:5432"
    volumes:
      - userdb_data:/var/lib/postgresql/data
    networks:
      - app-network
  scoredb:
    image: postgres:16
    container_name: scoredb
    environment:
      POSTGRES_USER: scorepostgres
      POSTGRES_PASSWORD: scorepassword
      POSTGRES_DB: scoredb
    ports:
      - "5433:5432"
    volumes:
      - scoredb_data:/var/lib/postgresql/data
    networks:
      - app-network
  score-service:
    build: 
      context: ./projects/score_service
    volumes:
      -  ./projects/score_service/alembic/versions:/app/alembic/versions
    environment:
      - REDIS_HOST=redis
      - DB_URL=postgresql://scorepostgres:scorepassword@scoredb:5432/scoredb
    depends_on:
      - scoredb
      - redis
    ports:
      - "8003:8000"
    networks:
      - app-network
  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    networks:
      - app-network
  analytics_service:
    build:
      context: ./projects/analytics_service
    depends_on:
      - kafka
      - mongo
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC=user.registered
      - MONGO_URI=mongodb://mongo:27017
      - MONGO_DB=analytics_db


  

volumes:
  userdb_data:
  scoredb_data:
  
networks:
  app-network:
    driver: bridge
    